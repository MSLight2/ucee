// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button demo test 1`] = `
Array [
  <button
    className="ucee-button ucee-button--default"
    onClick={[Function]}
    style={Object {}}
  >
    默认按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary"
    onClick={[Function]}
    style={Object {}}
  >
    主要按钮
  </button>,
  <button
    className="ucee-button ucee-button--info"
    onClick={[Function]}
    style={Object {}}
  >
    信息按钮
  </button>,
  <button
    className="ucee-button ucee-button--warning"
    onClick={[Function]}
    style={Object {}}
  >
    警告按钮
  </button>,
  <button
    className="ucee-button ucee-button--danger"
    onClick={[Function]}
    style={Object {}}
  >
    危险按钮
  </button>,
  <a
    className="ucee-button ucee-button--link"
    onClick={[Function]}
    style={Object {}}
  >
    连接按钮
  </a>,
  <button
    className="ucee-button ucee-button--default ucee-button--plain"
    onClick={[Function]}
    style={Object {}}
  >
    朴素按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--plain"
    onClick={[Function]}
    style={Object {}}
  >
    朴素按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--disabled"
    disabled={true}
    onClick={[Function]}
    style={Object {}}
  >
    禁止按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--mini ucee-button--round"
    onClick={[Function]}
    style={Object {}}
  >
    半圆
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--small ucee-button--round"
    onClick={[Function]}
    style={Object {}}
  >
    半圆
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--round"
    onClick={[Function]}
    style={Object {}}
  >
    半圆
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--circle"
    onClick={[Function]}
    style={Object {}}
  >
    圆
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--block"
    onClick={[Function]}
    style={Object {}}
  >
    块级按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary"
    onClick={[Function]}
    style={
      Object {
        "background": "red",
        "borderColor": "red",
        "color": "white",
      }
    }
  >
    自定义颜色
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--plain"
    onClick={[Function]}
    style={
      Object {
        "borderColor": "red",
        "color": "red",
      }
    }
  >
    自定义颜色
  </button>,
  <button
    className="ucee-button ucee-button--primary"
    onClick={[Function]}
    style={
      Object {
        "background": "linear-gradient(to right, #4bb0ff, #6149f6)",
        "border": 0,
        "color": "white",
      }
    }
  >
    渐变按钮
  </button>,
  <button
    className="ucee-button ucee-button--default ucee-button--plain ucee-button--hairline"
    onClick={[Function]}
    style={Object {}}
  >
    细边框按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--plain ucee-button--hairline"
    onClick={[Function]}
    style={Object {}}
  >
    细边框按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--icon"
    onClick={[Function]}
    style={Object {}}
  >
    <i
      className="ucee-icon ucee-icon-people"
      style={Object {}}
    />
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--icon"
    onClick={[Function]}
    style={Object {}}
  >
    <i
      className="ucee-icon ucee-icon-people"
      style={Object {}}
    />
    图标按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--plain ucee-button--icon"
    onClick={[Function]}
    style={Object {}}
  >
    <img
      alt=""
      className="ucee-button__img"
      src="https://img.yzcdn.cn/vant/user-active.png"
    />
    图片按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--loading"
    onClick={[Function]}
    style={Object {}}
  >
    <div
      className="ucee-loading__spinner"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
    >
      <svg
        preserveAspectRatio="xMidYMid"
        viewBox="0 0 100 100"
      >
        <g
          transform="rotate(0 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.9075907590759075s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(30 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.825082508250825s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(60 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.7425742574257426s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(90 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.6600660066006601s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(120 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.5775577557755776s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(150 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.495049504950495s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(180 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.4125412541254125s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(210 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.33003300330033003s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(240 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.2475247524752475s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(270 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.16501650165016502s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(300 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="-0.08250825082508251s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
        <g
          transform="rotate(330 50 50)"
        >
          <rect
            fill="white"
            rx="0"
            ry="0"
            x="47.5"
            y="12.5"
          >
            <animate
              attributeName="opacity"
              begin="0s"
              dur="0.9900990099009901s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="1;0"
            />
          </rect>
        </g>
      </svg>
    </div>
    加载按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary ucee-button--loading"
    onClick={[Function]}
    style={Object {}}
  >
    <div
      className="ucee-loading__ring"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
    >
      <svg
        preserveAspectRatio="xMidYMid"
        viewBox="1 1 38 38"
      >
        <path
          d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946 s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634 c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z"
          fill="white"
          opacity="0.2"
        />
        <path
          d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0 C22.32,8.481,24.301,9.057,26.013,10.047z"
          fill="white"
        >
          <animateTransform
            attributeName="transform"
            attributeType="xml"
            dur="0.5s"
            from="0 20 20"
            repeatCount="indefinite"
            to="360 20 20"
            type="rotate"
          />
        </path>
      </svg>
    </div>
    加载按钮
  </button>,
  <button
    className="ucee-button ucee-button--primary"
    onClick={[Function]}
    style={Object {}}
  >
    点击加载
  </button>,
]
`;
